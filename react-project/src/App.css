@font-face {
  font-family: "Heebo";
  src: url("./assets/fonts/Heebo-Bold.woff") format("woff2");
  font-weight: 300;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: "Heebo";
  src: url("./assets/fonts/Heebo-Light.woff") format("woff2");
  font-weight: 700;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: "Heebo";
  src: url("./assets/fonts/Yantramanav-Bold.woff") format("woff2");
  font-weight: 700;
  font-style: normal;
  font-display: swap;
}

/**
Нормализация блочной модели
*/
*,
::before,
::after {
  box-sizing: border-box;
}

/**
Убираем внутренние отступы слева тегам списков,
у которых есть атрибут class
*/
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
Убираем внешние отступы body и двум другим тегам,
у которых есть атрибут class
*/
body,
:where(blockquote, figure):where([class]) {
  margin: 0;
}

/**
Убираем внешние отступы вертикали нужным тегам,
у которых есть атрибут class
*/
:where(h1, h2, h3, h4, h5, h6, p, ul, ol, dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

/**
Убираем стандартный маркер маркированному списку,
у которого есть атрибут class
*/
:where(ul[class]) {
  list-style: none;
}

:where(address[class]) {
  font-style: normal;
}

/**
Обнуляем вертикальные внешние отступы параграфа,
объявляем локальную переменную для внешнего отступа вниз,
чтобы избежать взаимодействие с более сложным селектором
*/
p {
  --paragraphMarginBottom: 24px;
  color: var(--color-light);

  margin-block: 0;
}

/**
Внешний отступ вниз для параграфа без атрибута class,
который расположен не последним среди своих соседних элементов
*/
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
Упрощаем работу с изображениями и видео
*/
img,
video {
  display: block;
  max-width: 100%;
  height: auto;
}

/**
Наследуем свойства шрифт для полей ввода
*/
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
  Пригодится в большинстве ситуаций
  (когда, например, нужно будет "прижать" футер к низу сайта)
*/
  height: 100%;
  width: 100%;
  margin: 0;
  padding: 0;
  /**
  Убираем скачок интерфейса по горизонтали
  при появлении / исчезновении скроллбара
*/
  scrollbar-gutter: stable;
}

/**
Плавный скролл
*/
html,
:has(:target) {
  scroll-behavior: smooth;
}

body {
  /**
  Пригодится в большинстве ситуаций
  (когда, например, нужно будет "прижать" футер к низу сайта)
*/
  min-height: 100%;
  min-width: 100%;
  margin: 0;
  padding: 0;
  /**
  Унифицированный интерлиньяж
*/
  line-height: 1.5;
}

/**
Нормализация высоты элемента ссылки при его инспектировании в DevTools
*/
a:where([class]) {
  display: inline-flex;
}

/**
Курсор-рука при наведении на элемент
*/
button,
label {
  cursor: pointer;
}

/**
Приводим к единому цвету svg-элементы
*/
[fill] {
  fill: currentColor;
}
[stroke] {
  stroke: currentColor;
}

/**
Чиним баг задержки смены цвета при взаимодействии с svg-элементами
*/
svg * {
  color: var(--color-light);
  /* fill: currentColor; */
  transition-property: fill, stroke;
  transition-duration: var(--transition-duration);
}

/**
Удаляем все анимации и переходы для людей,
которые предпочитают их не использовать
*/
@media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

a {
  color: var(--color-light);
  text-decoration: underline;
}

#root {
  min-height: 100vh;
  height: 100%;
  width: 100%;
}

:root {
  --color-dark-alternate: #131619;
  --color-dark: #000000;
  --color-light: #ffffff;
  --color-dark-gray: #404040;
  --color-light-gray: #c4c4c4;

  --border-radius: 30px;
  --border: 1px solid var(--color-light);

  --font-family-base: "Heebo", sans-serif;
  --font-family-accent: "Yantramanav", sans-serif;

  --input-height: 54px;

  --container-width: 1300px;
  --container-padding-x: 15px;

  --transition-duration: 0.2s;

  --header-height: 90px;
}

.titleMedium {
  font-weight: 700;
  font-size: clamp(20px, 2.08vw, 40px);
  line-height: 1.3;
  text-transform: uppercase;
}

body {
  background-color: var(--color-dark);
  font-family: var(--font-family-base);
  font-weight: 300;
  font-size: 16px;
  line-height: 28px;
}

.backdropTitle {
  position: relative;
  z-index: 2;
}

.backdropTitle::before {
  content: "";
  display: block;
  width: 26px;
  aspect-ratio: 1;
  /* height: 41px; */
  background: url(./motivation/plus.svg) center/contain no-repeat;
  position: absolute;
  top: calc(0% - 8px);
  right: 100%;
}

.backdropTitle::after {
  content: attr(data-title);
  font-size: 2.8em;
  font-family: var(--font-family-accent);
  color: transparent;
  -webkit-text-stroke: 1px var(--color-light-gray);
  text-stroke: 1px var(--color-light-gray);
  opacity: 30%;
  position: absolute;
  z-index: -1;
  top: -0.45em;
  left: -0.6em;
  line-height: 1;
}

.backdropTitle.centered::after {
  left: 50%;
  top: -0.35em;
  translate: -50% 0;
}

.sectionDescription {
  font-size: 20px;
  line-height: 1.65;
  text-transform: uppercase;
  color: var(--color-light);
  text-align: center;
}

.input {
  height: var(--input-height);
  padding-inline: 25px;
  width: 100%;
  background-color: transparent;
  border: 1px solid var(--color-light-gray);
  border-radius: var(--border-radius);
  color: var(--color-light);
}

.input::placeholder {
  color: var(--color-light-gray);
}

.input:hover {
  border-color: var(--color-light);
}

.input:focus {
  outline: none;
  background-color: var(--color-light-gray);
  color: var(--color-dark);
}

.container {
  max-width: calc(var(--container-width) + var(--container-padding-x) * 2);
  margin-inline: auto;
  padding-inline: var(--container-padding-x);
}

.containerWide {
  max-width: 1920px;
  margin-inline: auto;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-weight: 700px;
  text-transform: uppercase;
  color: var(--color-light);
}

a,
button,
input,
textarea,
svg * {
  transition-duration: var(--transition-duration);
}

.visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  margin: -1px !important;
  border: 0 !important;
  padding: 0 !important;
  white-space: nowrap !important;
  clip-path: inset(100%) !important;
  clip: rect(0 0 0 0) !important;
  overflow: hidden !important;
}

.titleBig {
  font-size: clamp(24px, 3.12vw, 60px);
}

svg * [fill] {
  fill: currentColor;
}

svg * [stroke] {
  stroke: currentColor;
}

svg *:hover {
  color: var(--color-light-gray);
}

@media (max-width: 900px) {
  .header,
  .banner {
    flex-wrap: wrap;
    padding-inline: 15px;
  }
}

@media (max-width: 767px) {
  .banner-info::before {
    margin-right: 10px;
  }
}

@media (max-width: 360px) {
  .banner-info::before {
    margin-right: 0;
  }
}
